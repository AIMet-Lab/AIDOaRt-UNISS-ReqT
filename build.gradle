plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

group 'it.sagelab'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

javafx {
    version = "13"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

dependencies {
    compile 'net.openhft:compiler:2.3.4'
    compile 'org.slf4j:slf4j-api'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile project(':SpecPro')
}


mainClassName = "it.sagelab.reqt.Main"

jar {
    manifest {
        attributes 'Main-Class': "it.sagelab.reqt.Main"
    }
}

applicationDistribution.from("$projectDir") {
    into ''
    include 'examples/*/*'
}

// Creates scripts for entry points
// Subproject must apply application plugin to be able to call this method.
def createScript(project, mainClass, name) {
    project.tasks.create(name: name, type: CreateStartScripts) {
        outputDir       = new File(project.buildDir, 'scripts')
        mainClassName   = mainClass
        applicationName = name
        classpath       = project.tasks[JavaPlugin.JAR_TASK_NAME].outputs.files + project.configurations.runtime
    }
    project.tasks[name].dependsOn(project.jar)

    project.applicationDistribution.with {
        into("bin") {
            from(project.tasks[name])
            fileMode = 0755
        }
    }
}

// Call this for each Main class you want to expose with an app script
createScript(project, 'it.sagelab.reqt.MainCLI', 'ReqT-CLI')